<#
.NAME
    Find-CVE-2020-0601


.SYNOPSIS
    This cmdlet is used for discovering the exploitation of CVE-2020-0601 on a device.


.EXAMPLE
    -------------------------- EXAMPLE 1 --------------------------
    Start-Listener -Port 1234
    This examples connects to a listener on port 1234.


.PARAMETERS
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216).


.NOTES
    Author: Rob Osborne
    Alias: tobor
    Contact: rosborne@osbornepro.com


.INPUTS
    None


.OUTPUTS
    None


.LINK
    https://gist.github.com/SwitHak/62fa7f8df378cae3a459670e3a18742d
    https://github.com/tobor88
    https://www.powershellgallery.com/profiles/tobor
    https://roberthosborne.com

#>
Function Find-CVE-2020-0601 {
    [CmdletBinding()]
        param(
            [Parameter(
                Mandatory=$False,
                Position=0,
                ValueFromPipeline=$True,
                ValueFromPipelineByPropertyName=$True,
                HelpMessage="Enter the FQDN, hostname, or IPv4 address of a remote computer")]  # End Parameter
            [String[]]$ComputerName = $env:COMPUTERNAME)  # End param

    BEGIN
    {

        If (Test-Connection -ComputerName $ComputerName -Quiet)
        {

            Write-Output "[*] $ComputerName is reachable"

        }  # End If
        Else
        {

            Write-Output "[!] $ComputerName could not be reached via ICMP. Continuing Event Log search anyway"

        }  # End Else

    }  # End BEGIN
    PROCESS
    {

        ForEach ($Computer in $ComputerName)
        {

            Try
            {

                Get-WinEvent -ComputerName $Computer -FilterHashtable @{ LogName = 'Application'; Id = 1; ProviderName = 'Microsoft-Windows-Audit-CVE' } -ErrorAction SilentlyContinue | Select-Object -Property * -ExcludeProperty 'MachineName','UserId'

                Write-Output "[*] If an event is returned, $Computer has been compromised previously from CVE-2020-0601"

            }  # End Try
            Catch
            {

                Write-Output "[*] No events were found matching the criteria. CVE-2020-0601 has not been used to compromise $Computer"

            }  # End Catch

        }  # End ForEach

    }  # End PROCESS
    END
    {

        Write-Verbose "[*] Completed check"

    }  # End END

}  # End Function Find-CVE-2020-0601
